/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package family_dental_care;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author thoma
 */
public class manager_room_book extends javax.swing.JFrame {

    /**
     * Creates new form manager_room_book
     */
    public manager_room_book() {
        initComponents();
        roomidcombobox();
        patientidcombobox();
        
        autoID();
        RefrushTable();
    Toolkit toolkit=getToolkit();
    Dimension size=toolkit.getScreenSize();
    setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
    
    ImageIcon logo_im=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
    Image img1_logo=logo_im.getImage();
    Image img2_logo=img1_logo.getScaledInstance(logo.getWidth(),logo.getHeight(),Image.SCALE_SMOOTH);
    ImageIcon a=new ImageIcon(img2_logo);
    logo.setIcon(a);
    
    ImageIcon home_im=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("home.png")));
    Image img1_home=home_im.getImage();
    Image img2_home=img1_home.getScaledInstance(home.getWidth(),home.getHeight(),Image.SCALE_SMOOTH);
    ImageIcon b=new ImageIcon(img2_home);
    home.setIcon(b);
    
    
    //resize close button 
    ImageIcon close_img=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("close.png")));
    Image img1_close=close_img.getImage();
    Image img2_close=img1_close.getScaledInstance(close.getWidth(),close.getHeight(),Image.SCALE_SMOOTH);
    ImageIcon c=new ImageIcon(img2_close);
    close.setIcon(c);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //room id for combobox
    private void roomidcombobox(){
         try{
               connection mysql=new connection();
               Connection con=mysql.connectDB();
               PreparedStatement ps1=con.prepareStatement("SELECT * FROM room");
               ResultSet rs=ps1.executeQuery();
               while(rs.next()){
                  roomid.addItem(rs.getString("roomid"));
               }
         }
         catch(Exception ex){
               JOptionPane.showMessageDialog(null,"no id is there..");        
         }
    }
    //patient id for combo box
    private void patientidcombobox(){
       try{
               connection mysql=new connection();
               Connection con=mysql.connectDB();
               PreparedStatement ps1=con.prepareStatement("select * from patient");
               ResultSet rs=ps1.executeQuery();
               while(rs.next()){
                  patientid.addItem(rs.getString("patientid"));
               }
         }
         catch(Exception ex){
                   JOptionPane.showMessageDialog(null,"no id is there..");    
         }
    }
    //doctor id for combo box
    
    
    //auto id
    private void autoID(){
    try{
        connection mysql=new connection();
        Connection con=mysql.connectDB();
        PreparedStatement selectdata=con.prepareStatement("SELECT roombookid FROM room_book ORDER BY roombookid DESC LIMIT 1");
        ResultSet rs=selectdata.executeQuery();
        if(rs.next()){
           String rnno=rs.getString("roombookid");
           int co=rnno.length();
           String txt= rnno.substring(0, 4);
           String num=rnno.substring(4, co);
           int n=Integer.parseInt(num);
           n++;
           String snum=Integer.toString(n);
           String ftxt=txt+snum;
           roombookid.setText(ftxt);
        }
        else{
           roombookid.setText("RB001");
        }
        }
        catch(Exception ex){
           JOptionPane.showMessageDialog(null,"no id is there..");
        }
    }
    //LOAD DATA TO TABLE
    private void RefrushTable(){
    try{
         connection mysql=new connection();
         Connection con=mysql.connectDB();
         PreparedStatement ps1=con.prepareStatement("SELECT * FROM room_book");
         ResultSet rs=ps1.executeQuery();
         DefaultTableModel model=(DefaultTableModel)roombook_table.getModel();
         model.setRowCount(0);
         while(rs.next()){
           String roombook_id=rs.getString("roombookid");
           String room_id=rs.getString("roomid");
           String doctor_id=rs.getString("doctorid");
           String patient_id=rs.getString("patientid");
           String book_date=rs.getString("date");
           String book_time=rs.getString("time");
           String book_status=rs.getString("status");
           //create array for store data into patient_table
           String tbData[]={roombook_id,room_id,doctor_id,patient_id,book_date,book_time,book_status};
           DefaultTableModel tb1Model=(DefaultTableModel)roombook_table.getModel();
           //add string array data to table
           tb1Model.addRow(tbData);                   
         }
         
        }
        catch(Exception ex){
         JOptionPane.showMessageDialog(null,"error happen.please try again..");
         autoID();
        }
    }
    //Sort table
    private void sort(){
       DefaultTableModel model=(DefaultTableModel)roombook_table.getModel();    
       TableRowSorter sorter=new TableRowSorter(model);
       roombook_table.setRowSorter(sorter);
    }
    //Filter table with sorting object
    private void filter(String query){
       //sorting the table values
       DefaultTableModel model=(DefaultTableModel)roombook_table.getModel();    
       TableRowSorter sorter=new TableRowSorter(model);
       roombook_table.setRowSorter(sorter);
       sorter.setRowFilter(RowFilter.regexFilter(query));
       
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        roombookid = new javax.swing.JTextField();
        roomid = new javax.swing.JComboBox<>();
        patientid = new javax.swing.JComboBox<>();
        clear_roombook = new javax.swing.JButton();
        search_roombook = new javax.swing.JButton();
        insert_roombook = new javax.swing.JButton();
        update_roombook = new javax.swing.JButton();
        delete_roombook = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        roombook_table = new javax.swing.JTable();
        check_doctors = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        doctorid = new javax.swing.JComboBox<>();
        home = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        time = new cambodia.raven.Time();
        book_date = new javax.swing.JTextField();
        book_time = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(87, 194, 213));

        jLabel29.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel29.setText("            Doctor");
        jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel29MouseClicked(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel30.setText("            Patient");
        jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel31.setText("      Appointment");
        jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel32.setText("              Staff");
        jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel33.setText("         Treatment");
        jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel34.setText("             Room");
        jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel35.setText("    Treatment Book");
        jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel36.setText("        Room Book");
        jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel36MouseClicked(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jLabel37.setText("           Payment");
        jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel37MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 24)); // NOI18N
        jLabel1.setText("Room book");

        jLabel11.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        jLabel11.setText("Room Book ID");

        jLabel12.setBackground(new java.awt.Color(87, 194, 213));
        jLabel12.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        jLabel12.setText("Room ID");

        jLabel13.setBackground(new java.awt.Color(87, 194, 213));
        jLabel13.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        jLabel13.setText("Patient ID");

        roombookid.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        roombookid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roombookidMouseClicked(evt);
            }
        });
        roombookid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roombookidActionPerformed(evt);
            }
        });
        roombookid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                roombookidKeyReleased(evt);
            }
        });

        roomid.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        roomid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomidActionPerformed(evt);
            }
        });

        patientid.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        patientid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientidActionPerformed(evt);
            }
        });

        clear_roombook.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        clear_roombook.setText("clear");
        clear_roombook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clear_roombookMouseClicked(evt);
            }
        });
        clear_roombook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_roombookActionPerformed(evt);
            }
        });

        search_roombook.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        search_roombook.setText("search");
        search_roombook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_roombookActionPerformed(evt);
            }
        });

        insert_roombook.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        insert_roombook.setText("insert");
        insert_roombook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_roombookActionPerformed(evt);
            }
        });

        update_roombook.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        update_roombook.setText("update");
        update_roombook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_roombookActionPerformed(evt);
            }
        });

        delete_roombook.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        delete_roombook.setText("delete");
        delete_roombook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_roombookActionPerformed(evt);
            }
        });

        roombook_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Room ID", "Doctor ID", "Patient ID", "Date", "Time", "Status"
            }
        ));
        roombook_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roombook_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(roombook_table);

        check_doctors.setBackground(new java.awt.Color(204, 204, 204));
        check_doctors.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        check_doctors.setText("checkout doctors");
        check_doctors.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        check_doctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_doctorsActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(87, 194, 213));
        jLabel14.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        jLabel14.setText("Date");

        jLabel15.setBackground(new java.awt.Color(87, 194, 213));
        jLabel15.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        jLabel15.setText("Time");

        jLabel16.setBackground(new java.awt.Color(87, 194, 213));
        jLabel16.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        jLabel16.setText("Doctor ID");

        doctorid.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        doctorid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctoridActionPerformed(evt);
            }
        });

        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });

        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });

        jDateChooser2.setDateFormatString("yyyy-MM-dd");
        jDateChooser2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        book_date.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        book_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_dateActionPerformed(evt);
            }
        });
        book_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                book_dateKeyReleased(evt);
            }
        });

        book_time.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        book_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_timeActionPerformed(evt);
            }
        });
        book_time.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                book_timeKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(roombookid)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(check_doctors)
                                .addGap(17, 17, 17))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(time, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(book_date, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                    .addComponent(book_time)))
                            .addComponent(patientid, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roomid, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doctorid, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clear_roombook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_roombook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update_roombook, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(delete_roombook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insert_roombook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(roombookid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel13)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel14)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(roomid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(patientid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(book_date, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(book_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(check_doctors)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(doctorid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(clear_roombook)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(search_roombook)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(insert_roombook)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(update_roombook)
                                .addGap(8, 8, 8)
                                .addComponent(delete_roombook)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        // TODO add your handling code here:
        new patient().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel30MouseClicked

    private void roombookidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roombookidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roombookidActionPerformed

    private void roombookidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roombookidKeyReleased
               String query=roombookid.getText();
               filter(query);
    }//GEN-LAST:event_roombookidKeyReleased

    private void roomidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomidActionPerformed

    private void patientidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientidActionPerformed

    private void clear_roombookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_roombookMouseClicked
        // TODO add your handling code here:
        autoID();
    }//GEN-LAST:event_clear_roombookMouseClicked

    private void clear_roombookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_roombookActionPerformed
        // TODO add your handling code here:
        roomid.setSelectedItem(null);
        patientid.setSelectedItem(null);
        jDateChooser2.setDate(null);
        book_date.setText(null);
        book_time.setText(null);
        time.setToolTipText(null);
        doctorid.setSelectedItem(null);

    }//GEN-LAST:event_clear_roombookActionPerformed

    private void search_roombookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_roombookActionPerformed
        // TODO add your handling code here:
        String roombook_id=roombookid.getText();
        if(roombook_id.equals("")){
        
        }
        else{
          try{
               connection mysql=new connection();
            Connection con=mysql.connectDB();
            
            PreparedStatement selectdata=con.prepareStatement("select * from room_book where roombookid=?");
            selectdata.setString(1,roombook_id);
            ResultSet rs=selectdata.executeQuery();
            if(rs.next()){
                roombookid.setText(rs.getString("roombookid"));
                roomid.setSelectedItem(rs.getString("roomid"));
                patientid.setSelectedItem(rs.getString("patientid"));
                book_date.setText(rs.getString("date"));
                book_time.setText(rs.getString("time"));
                doctorid.setSelectedItem(rs.getString("doctorid"));
            }
            else{
                roomid.setSelectedItem(null);
                patientid.setSelectedItem(null);
                jDateChooser2.setDate(null);
                book_date.setText(null);
                book_time.setText(null);
                time.setToolTipText(null);
                doctorid.setSelectedItem(null);  
                JOptionPane.showMessageDialog(null,"no records are there!!");
                autoID();
            }
          }
          catch(Exception ex){
            JOptionPane.showMessageDialog(null,"Error");
            autoID();
          }
        }
        

    }//GEN-LAST:event_search_roombookActionPerformed

    private void insert_roombookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_roombookActionPerformed
            try{
              connection mysql=new connection();
              Connection con=mysql.connectDB();
              
              String roombook_id=roombookid.getText();
              String room_id=roomid.getSelectedItem().toString();
              String patient_id=patientid.getSelectedItem().toString();
              String room_date=((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText();//covert date to string
              String room_time=time.getText();
              String doctor_id=doctorid.getSelectedItem().toString();
              System.out.println(room_time);
              System.out.println(room_date);
              PreparedStatement ps1=con.prepareStatement("INSERT INTO room_book(roombookid,roomid,doctorid,patientid,date,time,status) VALUES(?,?,?,?,?,?,?)");
              ps1.setString(1,roombook_id);
              ps1.setString(2,room_id);
              ps1.setString(3,doctor_id);
              ps1.setString(4,patient_id);
              ps1.setString(5,room_date);
              ps1.setString(6,room_time);
              String status="pending";
              ps1.setString(7,status);
              ps1.executeUpdate();
              JOptionPane.showMessageDialog(null,"Inserted suncessfully..");
              autoID();
              RefrushTable();
            }
            catch(Exception ex){
              JOptionPane.showMessageDialog(null,"Error");
            }
            
            
    }//GEN-LAST:event_insert_roombookActionPerformed

    private void update_roombookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_roombookActionPerformed
        // TODO add your handling code here:
        try{
              connection mysql=new connection();
              Connection con=mysql.connectDB();
              String roombook_id=roombookid.getText();
              String room_id=roomid.getSelectedItem().toString();
              String patient_id=patientid.getSelectedItem().toString();
              String room_date=((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText();//covert date to string
              String room_time=time.getText();
              String doctor_id=doctorid.getSelectedItem().toString();
              PreparedStatement ps=con.prepareStatement("UPDATE room_book SET roomid=?,doctorid=?,patientid=?,date=?,time=?,status=? WHERE roombookid=?");
              ps.setString(1,room_id);
              ps.setString(2,doctor_id);
              ps.setString(3,patient_id);
              ps.setString(4,room_date);
              ps.setString(5,room_time);
              String status="done";
              ps.setString(6,status);
              ps.setString(7,roombook_id);
              ps.executeUpdate();
              JOptionPane.showMessageDialog(null,"updated suncessfully..");
              autoID();
              RefrushTable();
        }     
        catch(Exception ex){
             JOptionPane.showMessageDialog(null,"Error");
             autoID();
        }      
        

    }//GEN-LAST:event_update_roombookActionPerformed

    private void delete_roombookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_roombookActionPerformed
               if(roombookid.getText().equals("")){
                  JOptionPane.showMessageDialog(null,"Enter ID to delete..");
                  autoID();
               }
               else{
                  try{
                     connection mysql=new connection();
                     Connection con=mysql.connectDB();
                     String roombook_id=roombookid.getText();
                     PreparedStatement ps=con.prepareStatement("DELETE from room_book WHERE roombookid=?");
                     ps.setString(1,roombook_id);
                     ps.executeUpdate();
                     JOptionPane.showMessageDialog(null,"deleted suncessfully..");
                     autoID();
                     RefrushTable();
                  }
                  catch(Exception ex){
                     JOptionPane.showMessageDialog(null,"error happen.please try again..");
                     autoID();            
                  }
               }
               
    }//GEN-LAST:event_delete_roombookActionPerformed

    private void roombook_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roombook_tableMouseClicked

    }//GEN-LAST:event_roombook_tableMouseClicked

    private void check_doctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_doctorsActionPerformed
        // TODO add your handling code here:
        String book_date=((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText();
        String book_time=time.getText();
        if(book_date.equals("") || book_time.equals("")){
           JOptionPane.showMessageDialog(null,"Enter date and time to find avilable doctors");
           autoID();
        }
        else{
           try{
              connection mysql=new connection();
              Connection con=mysql.connectDB();
              PreparedStatement ps=con.prepareStatement("select distinct doctorid from doctor where doctorid not in(select doctorid from appointment where date=? and time=?)");
              ps.setString(1,book_date);
              ps.setString(2,book_time);
              ResultSet rs1=ps.executeQuery();
              while(rs1.next()){
                  //System.out.println(rs1.getString("doctorid"));
                 doctorid.addItem(rs1.getString("doctorid"));
              }
              
           }
           catch(Exception ex){
              System.out.println(ex);
              JOptionPane.showMessageDialog(null,"error happen.please try again..");
              autoID();  
           }
        }
    }//GEN-LAST:event_check_doctorsActionPerformed

    private void doctoridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctoridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctoridActionPerformed

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        // TODO add your handling code here:
        new manager_dashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_homeMouseClicked

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeMouseClicked

    private void book_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_book_dateActionPerformed

    private void book_dateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_book_dateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_book_dateKeyReleased

    private void book_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_book_timeActionPerformed

    private void book_timeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_book_timeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_book_timeKeyReleased

    private void roombookidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roombookidMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_roombookidMouseClicked

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        // TODO add your handling code here:
        new manager_appointment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jLabel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseClicked
        // TODO add your handling code here:
        new manager_doctor().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel29MouseClicked

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        // TODO add your handling code here:
        new manager_staff().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel32MouseClicked

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
        // TODO add your handling code here:
        new manager_treatment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel33MouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        // TODO add your handling code here:
        new manager_room().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        // TODO add your handling code here:
        new manager_treatment_book().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jLabel36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MouseClicked
        // TODO add your handling code here:
        new manager_room_book().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel36MouseClicked

    private void jLabel37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel37MouseClicked
        // TODO add your handling code here:
        new manager_payment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel37MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manager_room_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manager_room_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manager_room_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manager_room_book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manager_room_book().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField book_date;
    private javax.swing.JTextField book_time;
    private javax.swing.JButton check_doctors;
    private javax.swing.JButton clear_roombook;
    private javax.swing.JLabel close;
    private javax.swing.JButton delete_roombook;
    private javax.swing.JComboBox<String> doctorid;
    private javax.swing.JLabel home;
    private javax.swing.JButton insert_roombook;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logo;
    private javax.swing.JComboBox<String> patientid;
    private javax.swing.JTable roombook_table;
    private javax.swing.JTextField roombookid;
    private javax.swing.JComboBox<String> roomid;
    private javax.swing.JButton search_roombook;
    private cambodia.raven.Time time;
    private javax.swing.JButton update_roombook;
    // End of variables declaration//GEN-END:variables
}
